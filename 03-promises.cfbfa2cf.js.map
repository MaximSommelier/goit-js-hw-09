{"mappings":"gfAAAA,EAAA,SAEA,IAAMC,EAAQC,SAASC,cAAc,uBAC/BC,EAAOF,SAASC,cAAc,sBAC9BE,EAASH,SAASC,cAAc,wBACzBD,SAASC,cAAc,SAE/BG,iBAAiB,UAGtB,SAAmBC,GACjBA,EAAIC,iBACJC,YAAW,WAOXC,QAAUC,aAAY,WAChBN,IAAWO,IAGfC,QAAQC,IAAK,YACbF,GAAiB,E,GAChBR,GAXDS,QAAQC,IAAK,U,GACZb,E,IAPL,IAAIW,EAAiB,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst delay = document.querySelector('input[name=\"delay\"]')\nconst step = document.querySelector('input[name=\"step\"]')\nconst amount = document.querySelector('input[name=\"amount\"]')\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', onSubmit);\nlet promiseCounter = 0;\n\nfunction onSubmit (evt){\n  evt.preventDefault();\n  setTimeout(() => {\n    intervalOfPromises();\n    console.log(`Timeout`);\n  }, delay);\n}\n\nfunction intervalOfPromises(){\n  timerId = setInterval(() => {\n    if (amount === promiseCounter){\n      return\n    }\n    console.log(`Interval`);\n    promiseCounter +=1;\n  }, step);\n  return promiseCounter\n}\n\n// function createPromise(position, delay) {\n//   const shouldResolve = Math.random() > 0.3;\n  \n//   if (shouldResolve) {\n//     // Fulfill\n//   } else {\n//     // Reject\n//   }\n// }\n\n// createPromise()\n//   .then(({ position, delay }) => {\n//     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//     Notiflix.Notify.success('✅ Fulfilled promise ${position} in ${delay}ms');\n//   })\n//   .catch(({ position, delay }) => {\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//     Notiflix.Notify.warning('❌ Rejected promise ${position} in ${delay}ms');\n//   });\n"],"names":["parcelRequire","$ce04d3a99e08e73b$var$delay","document","querySelector","$ce04d3a99e08e73b$var$step","$ce04d3a99e08e73b$var$amount","addEventListener","evt","preventDefault","setTimeout","timerId","setInterval","$ce04d3a99e08e73b$var$promiseCounter","console","log"],"version":3,"file":"03-promises.cfbfa2cf.js.map"}