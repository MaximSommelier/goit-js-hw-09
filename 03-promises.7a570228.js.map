{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAQC,SAASC,cAAc,uBAE/BC,GADOF,SAASC,cAAc,sBACrBD,SAASC,cAAc,yBActC,SAASE,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACPH,EACFF,EAAQ,uBAAqBH,QAAiBC,OAE5CG,EAAK,sBAAoBJ,QAAeC,MAAU,GAErDA,EAAM,G,CAvBEL,SAASC,cAAc,SAE/BY,iBAAiB,UAEtB,SAAmBC,GACjBA,EAAIC,iBACJ,IAAK,IAAIC,EAAI,EAAGA,EAAId,EAAQc,GAAK,EAC/Bb,EAAca,EAAGjB,GAChBkB,MAAKC,GAASC,EAAAtB,GAASuB,OAAOC,QAAQH,KACtCI,OAAMJ,GAASC,EAAAtB,GAASuB,OAAOG,QAAQL,I","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst delay = document.querySelector('input[name=\"delay\"]')\nconst step = document.querySelector('input[name=\"step\"]')\nconst amount = document.querySelector('input[name=\"amount\"]')\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', onSubmit);\n\nfunction onSubmit (evt){\n  evt.preventDefault();\n  for (let i = 1; i < amount; i += 1) {\n    createPromise(i, delay)\n    .then(value => Notiflix.Notify.success(value))\n    .catch(value => Notiflix.Notify.warning(value))\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n    if (shouldResolve) {\n      resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    } else {\n      reject(`❌ Rejected promise ${position} in ${delay}ms`);\n    }\n  }, delay);\n});\n}\n\n\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$delay","document","querySelector","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$createPromise","position","delay1","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","evt","preventDefault","i","then","value","$parcel$interopDefault","Notify","success","catch","warning"],"version":3,"file":"03-promises.7a570228.js.map"}